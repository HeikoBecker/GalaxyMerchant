package GalaxyMerchant.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.EditorAspectDescriptorBase;
import org.jetbrains.annotations.NotNull;
import java.util.Collection;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import java.util.Collections;
import jetbrains.mps.lang.smodel.ConceptSwitchIndex;
import jetbrains.mps.lang.smodel.ConceptSwitchIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public class EditorAspectDescriptorImpl extends EditorAspectDescriptorBase {
  @NotNull
  public Collection<ConceptEditor> getDeclaredEditors(SAbstractConcept concept) {
    SAbstractConcept cncpt = ((SAbstractConcept) concept);
    switch (conceptIndex.index(cncpt)) {
      case 0:
        return Collections.<ConceptEditor>singletonList(new Assign_Editor());
      case 1:
        return Collections.<ConceptEditor>singletonList(new CommandList_Editor());
      case 2:
        return Collections.<ConceptEditor>singletonList(new ConversionAsk_Editor());
      case 3:
        return Collections.<ConceptEditor>singletonList(new ConversionDef_Editor());
      case 4:
        return Collections.<ConceptEditor>singletonList(new Name_Editor());
      case 5:
        return Collections.<ConceptEditor>singletonList(new Num_Editor());
      case 6:
        return Collections.<ConceptEditor>singletonList(new ValueAsk_Editor());
      default:
    }
    return Collections.<ConceptEditor>emptyList();
  }



  private static final ConceptSwitchIndex conceptIndex = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0x733ec1a84f04e04L, 0xa4a37cab3336e413L, 0x3aaa61a28327060aL), MetaIdFactory.conceptId(0x733ec1a84f04e04L, 0xa4a37cab3336e413L, 0x3aaa61a283270713L), MetaIdFactory.conceptId(0x733ec1a84f04e04L, 0xa4a37cab3336e413L, 0x3aaa61a2832706dcL), MetaIdFactory.conceptId(0x733ec1a84f04e04L, 0xa4a37cab3336e413L, 0x3aaa61a2832706bdL), MetaIdFactory.conceptId(0x733ec1a84f04e04L, 0xa4a37cab3336e413L, 0x3aaa61a2832706ddL), MetaIdFactory.conceptId(0x733ec1a84f04e04L, 0xa4a37cab3336e413L, 0x3aaa61a2832701f4L), MetaIdFactory.conceptId(0x733ec1a84f04e04L, 0xa4a37cab3336e413L, 0x3aaa61a283270708L)).seal();
}
